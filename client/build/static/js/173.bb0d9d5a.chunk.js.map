{"version":3,"file":"static/js/173.bb0d9d5a.chunk.js","mappings":"8OAOe,SAASA,IACtBC,SAASC,MAAQ,WACjB,IAAMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAClBC,GAAaC,EAAAA,EAAAA,MACnB,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA8CV,EAAAA,EAAAA,UAAS,IAAvD,eAAOW,EAAP,KAAwBC,EAAxB,KAEA,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KAqCA,OACE,qBACEC,UAAU,wCACVC,MAAO,CAAEC,gBAAiB,0BAF5B,WAIE,gBAAKF,UAAU,YAAf,UACE,SAAC,KAAD,CAAMG,GAAG,IAAIH,UAAU,eAAvB,UACE,gBAAKI,IAAKC,EAAMJ,MAAO,CAAEK,MAAO,KAAOC,IAAI,cAG/C,iBAAKP,UAAU,gFAAf,WACE,iBACEA,UAAU,yDACVQ,SAhDa,SAACC,GACpBA,EAAEC,iBAEF,IAAMC,EAAO,CACXC,UAAWxB,EACXyB,SAAUvB,EACVwB,gBAAiBlB,EACjBJ,MAAOA,EACPE,SAAUA,GAGNqB,EC/BsB,SAACJ,GAC7B,IAAIb,EAAS,CAAC,EA2Bd,OAzBKa,EAAKC,YACNd,EAAOc,UAAY,2BAGlBD,EAAKE,WACNf,EAAOe,SAAW,0BAGjBF,EAAKnB,MAEE,eAAewB,KAAKL,EAAKnB,SACjCM,EAAON,MAAQ,iBAFfM,EAAON,MAAQ,qBAIdmB,EAAKjB,SAECiB,EAAKjB,SAASuB,OAAS,IAC9BnB,EAAOJ,SAAW,6CAFlBI,EAAOJ,SAAW,wBAKjBiB,EAAKG,gBAECH,EAAKG,kBAAoBH,EAAKjB,WACrCI,EAAOgB,gBAAkB,0BAFzBhB,EAAOgB,gBAAkB,gCAKtBhB,CACV,CDEiBoB,CAAiBP,GAE/BZ,EAAUgB,GACwB,IAA9BI,OAAOC,KAAKL,GAAOE,SAGvB9B,GAAa,GACbkC,IAAAA,KAAA,UACWC,GADX,qBACgEX,GAC7DY,MAAK,SAAUC,GACd5C,EAAK6C,MAAMD,EAASb,KAAKA,KAAKe,KAAMF,EAASb,KAAKgB,OAClD5C,EAAW,IACZ,IACA6C,OAAM,SAAUb,GAAQ,IAAD,EAChBc,EAAM,CAAC,EACbA,EAAIC,IAAM,UAAAf,EAAMS,SAASb,YAAf,SAAqBoB,QAC3BhB,EAAMS,SAASb,KAAKoB,QACpBhB,EAAMgB,QACVhC,EAAU8B,EACX,IAEH1C,GAAa,GACd,EAaK,UAIE,iBAAKa,UAAU,QAAf,WACE,iBAAMA,UAAU,cAAhB,UACE,qCAUDF,EAAOgC,MACN,gBAAK9B,UAAU,qBAAf,UACE,cAAGA,UAAU,SAAb,SAAuBF,EAAOgC,SAIlC,iBAAK9B,UAAU,OAAf,WACE,kBAAOgC,QAAQ,YAAYhC,UAAU,aAArC,yBAGA,kBACEiC,KAAK,OACLjC,UAAU,eACVkC,GAAG,YACHC,YAAY,mBACZC,MAAOhD,EACPiD,SAAU,SAAC5B,GAAD,OAAOpB,EAAaoB,EAAE6B,OAAOF,MAA7B,IAEXtC,EAAOc,YACN,eAAGZ,UAAU,SAAb,UAAuBF,EAAOc,UAA9B,WAIJ,iBAAKZ,UAAU,OAAf,WACE,kBAAOgC,QAAQ,WAAWhC,UAAU,aAApC,wBAGA,kBACEiC,KAAK,OACLjC,UAAU,eACVkC,GAAG,WACHC,YAAY,kBACZC,MAAO9C,EACP+C,SAAU,SAAC5B,GAAD,OAAOlB,EAAYkB,EAAE6B,OAAOF,MAA5B,IAEXtC,EAAOe,WAAY,eAAGb,UAAU,SAAb,UAAuBF,EAAOe,SAA9B,WAGtB,iBAAKb,UAAU,OAAf,WACE,kBAAOgC,QAAQ,QAAQhC,UAAU,aAAjC,4BAGA,kBACEiC,KAAK,QACLjC,UAAU,eACVkC,GAAG,QACHC,YAAY,cACZC,MAAO5C,EACP6C,SAAU,SAAC5B,GAAD,OAAOhB,EAASgB,EAAE6B,OAAOF,MAAzB,IAEXtC,EAAON,QAAS,eAAGQ,UAAU,SAAb,UAAuBF,EAAON,MAA9B,WAGnB,iBAAKQ,UAAU,OAAf,WACE,kBAAOgC,QAAQ,WAAWhC,UAAU,aAApC,uBAGA,kBACEiC,KAAK,WACLjC,UAAU,eACVkC,GAAG,WACHC,YAAY,iBACZC,MAAO1C,EACP2C,SAAU,SAAC5B,GAAD,OAAOd,EAAYc,EAAE6B,OAAOF,MAA5B,IAEXtC,EAAOJ,WAAY,eAAGM,UAAU,SAAb,UAAuBF,EAAOJ,SAA9B,WAGtB,iBAAKM,UAAU,OAAf,WACE,kBAAOgC,QAAQ,kBAAkBhC,UAAU,aAA3C,+BAGA,kBACEiC,KAAK,WACLjC,UAAU,eACVkC,GAAG,kBACHC,YAAY,yBACZC,MAAOxC,EACPyC,SAAU,SAAC5B,GAAD,OAAOZ,EAAmBY,EAAE6B,OAAOF,MAAnC,IAEXtC,EAAOgB,kBACN,eAAGd,UAAU,SAAb,UAAuBF,EAAOgB,gBAA9B,WAIJ,gBAAKd,UAAU,sCAAf,UACE,mBACEA,UAAU,mCACVgC,QAAQ,gBAFV,oDAI0C,KACxC,SAAC,KAAD,CAAMhC,UAAU,YAAYG,GAAG,IAA/B,+BALF,SAYDjB,GACC,gBAAKc,UAAU,cAAf,UACE,gBAAKA,UAAU,8BAA8BuC,KAAK,SAAlD,UACE,iBAAMvC,UAAU,UAAhB,6BAIJ,mBACEiC,KAAK,SACLjC,UAAU,mCACVC,MAAO,CAAEC,gBAAiB,UAAWsC,OAAQ,QAH/C,uBAQF,iBAAMxC,UAAU,cAAhB,UACE,eAAGA,UAAU,eAAb,qCAC2B,KACzB,SAAC,KAAD,CAAMA,UAAU,YAAYG,GAAG,SAA/B,mBAFF,eAUN,gBACEH,UAAU,6DACVC,MAAO,CAAEC,gBAAiB,4BAF5B,UAIE,gBACEF,UAAU,6DACVC,MAAO,CAAEwC,UAAW,iBAM/B,C","sources":["Pages/Register/Register.jsx","Pages/Register/registerValidation.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../../Components/Context/AuthContext\";\nimport { signupValidation } from \"./registerValidation\";\nimport Logo from \"../../Images/logo.png\";\n\nexport default function Register() {\n  document.title = \"Register\";\n  const auth = useContext(AuthContext);\n  const navigation = useNavigate();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [firstname, setFirstName] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [errors, setErrors] = useState(\"\");\n\n  const HandleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = {\n      firstName: firstname,\n      lastName: lastname,\n      passwordConfirm: confirmPassword,\n      email: email,\n      password: password,\n    };\n\n    const error = signupValidation(data);\n\n    setErrors(error);\n    if (Object.keys(error).length !== 0) {\n      return;\n    }\n    setIsLoading(true);\n    axios\n      .post(`${process.env.REACT_APP_SERVER_URL}/api/users/signup`, data)\n      .then(function (response) {\n        auth.login(response.data.data.user, response.data.token);\n        navigation(\"/\");\n      })\n      .catch(function (error) {\n        const err = {};\n        err.api = error.response.data?.message\n          ? error.response.data.message\n          : error.message;\n        setErrors(err);\n      });\n\n    setIsLoading(false);\n  };\n\n  return (\n    <section\n      className=\"container-fluid login-container mt-0 \"\n      style={{ backgroundColor: \"rgba(0, 174, 249, 0.2)\" }}\n    >\n      <div className=\"auth-logo\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          <img src={Logo} style={{ width: 150 }} alt=\"logo\" />\n        </Link>\n      </div>\n      <div className=\"row justify-content-center align-items-center flex-column-reverse flex-md-row\">\n        <form\n          className=\"col-11 col-md-6 px-md-5 d-flex align-items-center my-5\"\n          onSubmit={HandleSubmit}\n        >\n          <div className=\"w-100\">\n            <span className=\"text-center\">\n              <h5>Signup</h5>\n            </span>\n            {/* <figure className=\"text-center\">\n            <img\n              src={RegisterImage}\n              className=\"align-self-center col-9\"\n              style={{ height: 'auto' }}\n              alt=\"\"\n            />\n          </figure> */}\n            {errors.api && (\n              <div className=\"alert alert-danger\">\n                <p className=\"errors\">{errors.api}</p>\n              </div>\n            )}\n\n            <div className=\"my-3\">\n              <label htmlFor=\"firstname\" className=\"form-label\">\n                First Name\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"firstname\"\n                placeholder=\"Enter First Name\"\n                value={firstname}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n              {errors.firstName && (\n                <p className=\"errors\">{errors.firstName} </p>\n              )}\n            </div>\n\n            <div className=\"my-3\">\n              <label htmlFor=\"lastname\" className=\"form-label\">\n                Last Name\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"lastname\"\n                placeholder=\"Enter Last Name\"\n                value={lastname}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n              {errors.lastName && <p className=\"errors\">{errors.lastName} </p>}\n            </div>\n\n            <div className=\"my-3\">\n              <label htmlFor=\"email\" className=\"form-label\">\n                Email address\n              </label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {errors.email && <p className=\"errors\">{errors.email} </p>}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"password\" className=\"form-label\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"password\"\n                placeholder=\"Enter Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {errors.password && <p className=\"errors\">{errors.password} </p>}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"confirmpassword\" className=\"form-label\">\n                Confirm Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"confirmpassword\"\n                placeholder=\"Enter Confirm Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n              {errors.passwordConfirm && (\n                <p className=\"errors\">{errors.passwordConfirm} </p>\n              )}\n            </div>\n\n            <div className=\"mb-3 form-check m-0 p-0 text-center\">\n              <label\n                className=\"form-check-label fw-bold m-0 p-0\"\n                htmlFor=\"exampleCheck1\"\n              >\n                By creating an account you agree to our{\" \"}\n                <Link className=\"link-blue\" to=\"/\">\n                  Terms & Condition\n                </Link>\n                .\n              </label>\n            </div>\n\n            {isLoading ? (\n              <div className=\"text-center\">\n                <div className=\"spinner-border text-primary\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            ) : (\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary col-12 py-2 mb-3\"\n                style={{ backgroundColor: \"#00aef9\", border: \"none\" }}\n              >\n                Register\n              </button>\n            )}\n            <span className=\"text-center\">\n              <p className=\"m-0 p-0 mt-2\">\n                Already have an account?{\" \"}\n                <Link className=\"link-blue\" to=\"/login\">\n                  Login\n                </Link>\n                .\n              </p>\n            </span>\n          </div>\n        </form>\n        <div\n          className=\"col-12 col-md-6 h-100 login-right-container-main mt-0 pt-0\"\n          style={{ backgroundColor: \"rgba(149, 187, 114, 0.3)\" }}\n        >\n          <div\n            className=\"login-right-container register-right-container w-100 h-100\"\n            style={{ minHeight: \"50vh\" }}\n          ></div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","//validation function for register\nexport const signupValidation = (data) => {\n    let errors = {};\n\n    if (!data.firstName) {\n        errors.firstName = \"First Name Is Required.\"\n    }\n\n    if (!data.lastName) {\n        errors.lastName = \"Last Name Is Required.\"\n    }\n\n    if (!data.email) {\n        errors.email = \"Email Is Required.\"\n    } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\n        errors.email = \"Invalid Email\"\n    }\n    if (!data.password) {\n        errors.password = \"Password is required.\"\n    } else if (data.password.length < 6) {\n        errors.password = \"Password must be more than six characters\"\n    }\n\n    if (!data.passwordConfirm) {\n        errors.passwordConfirm = \"Confirm Password is required.\"\n    } else if (data.passwordConfirm !== data.password) {\n        errors.passwordConfirm = \"Password must be match\"\n    }\n\n    return errors;\n}"],"names":["Register","document","title","auth","useContext","AuthContext","navigation","useNavigate","useState","isLoading","setIsLoading","firstname","setFirstName","lastname","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","className","style","backgroundColor","to","src","Logo","width","alt","onSubmit","e","preventDefault","data","firstName","lastName","passwordConfirm","error","test","length","signupValidation","Object","keys","axios","process","then","response","login","user","token","catch","err","api","message","htmlFor","type","id","placeholder","value","onChange","target","role","border","minHeight"],"sourceRoot":""}